-module(smapred).
-export([start/3]).
% the entry point for the MapReduce framework (the sequenatial 
% version)
start(Input, M_func, R_func) ->
   % applies the user-defined map function to the input
   % and generates a new list of key-value pairs
   List = lists:map(fun ({K1,V1}) -> M_func(K1,V1) end, Input),
   Pairs = lists:flatten(List),
   Intermediate_result = lists:foldl(
                          fun({K2,V2}, Dict) ->
                            dict:append(K2,V2,Dict) 
                          end, dict:new(), Pairs),
   
   % takes the intermediate result generated by the map 
   % and applies the user-defined reduce function to it
   % in order to produce the output 
   dict:map(fun(K2, Values) ->
               R_func(K2,Values)
            end, Intermediate_result). 
